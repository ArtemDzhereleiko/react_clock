{"version":3,"sources":["ButtonsControl.jsx","propstypes.js","Clock.jsx","App.js","index.js"],"names":["ButtonsControl","PropTypes","func","isRequired","number","hide","show","random","type","onClick","Clock","state","date","Date","toLocaleTimeString","isVisible","setDate","setState","this","timer","setInterval","console","log","prevProps","props","clockName","clearInterval","React","Component","App","Math","floor","className","ReactDOM","render","document","getElementById"],"mappings":"uNAGaA,GCALC,IAAUC,KAAKC,WACfF,IAAUC,KAAKC,WACbF,IAAUC,KAAKC,WACZF,IAAUG,OAAOD,WDHA,SAAC,GAAD,IAAGE,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,OAAf,OAC5B,oCACE,4BACEC,KAAK,SACLC,QAAS,WACPH,MAHJ,aAQA,4BACEE,KAAK,SACLC,QAAS,WACPJ,MAHJ,aAQA,4BACEG,KAAK,SACLC,QAAS,WACPF,MAHJ,kBEhBSG,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,WAAW,GAHf,EA2BEC,QAAU,WACR,EAAKC,SAAS,CAAEL,MAAM,IAAIC,MAAOC,wBA5BrC,EA+BET,KAAO,WACL,EAAKY,SAAS,CAAEF,WAAW,KAhC/B,EAmCET,KAAO,WACL,EAAKW,SAAS,CAAEF,WAAW,KApC/B,uDAME,WAAqB,IAAD,OAClBG,KAAKC,MAAQC,aAAY,WACnB,EAAKT,MAAMI,YACb,EAAKC,UAELK,QAAQC,IAAI,EAAKX,MAAMC,SAExB,OAbP,gCAgBE,SAAmBW,GACbL,KAAKM,MAAMC,YAAcF,EAAUE,WAErCJ,QAAQC,IAAR,qCAA0CC,EAAUE,UAApD,eAAoEP,KAAKM,MAAMC,cAnBrF,kCAuBE,WACEC,cAAcR,KAAKC,SAxBvB,oBAuCE,WACE,IAAQZ,EAAWW,KAAKM,MAAhBjB,OAER,OACE,oCACGW,KAAKP,MAAMI,WACV,mDACoBG,KAAKP,MAAMC,OAGjC,kBAAC,EAAD,CAAgBP,KAAMa,KAAKb,KAAMC,KAAMY,KAAKZ,KAAMC,OAAQA,SAjDlE,GAA2BoB,IAAMC,WCqBlBC,G,kNApBblB,MAAQ,CACNc,UAAW,G,EAGblB,OAAS,WACP,EAAKU,SAAS,CAAEQ,UAAWK,KAAKC,MAAsB,IAAhBD,KAAKvB,a,4CAG7C,WACE,OACE,yBAAKyB,UAAU,OACb,2CACA,kBAAC,EAAD,CACEP,UAAWP,KAAKP,MAAMc,UACtBlB,OAAQW,KAAKX,c,GAfLoB,IAAMC,YCDxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c6206b74.chunk.js","sourcesContent":["import React from 'react';\nimport { clockProps } from './propstypes';\n\nexport const ButtonsControl = ({ hide, show, random }) => (\n  <>\n    <button\n      type=\"button\"\n      onClick={() => {\n        show();\n      }}\n    >\n      Show time\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => {\n        hide();\n      }}\n    >\n      Hide time\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => {\n        random();\n      }}\n    >\n      Random name\n    </button>\n  </>\n);\n\nButtonsControl.propTypes = clockProps;\n","import PropTypes from 'prop-types';\n\nexport const clockProps = {\n  hide: PropTypes.func.isRequired,\n  show: PropTypes.func.isRequired,\n  random: PropTypes.func.isRequired,\n  clockName: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { ButtonsControl } from './ButtonsControl';\n\nimport { clockProps } from './propstypes';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n    isVisible: true,\n  };\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      if (this.state.isVisible) {\n        this.setDate();\n        // eslint-disable-next-line\n        console.log(this.state.date);\n      }\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  setDate = () => {\n    this.setState({ date: new Date().toLocaleTimeString() });\n  }\n\n  hide = () => {\n    this.setState({ isVisible: false });\n  }\n\n  show = () => {\n    this.setState({ isVisible: true });\n  }\n\n  render() {\n    const { random } = this.props;\n\n    return (\n      <>\n        {this.state.isVisible && (\n          <p>\n            {`Current time: ${this.state.date}`}\n          </p>\n        )}\n        <ButtonsControl hide={this.hide} show={this.show} random={random} />\n      </>\n    );\n  }\n}\n\nClock.propTypes = clockProps;\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    clockName: 0,\n  }\n\n  random = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 1000) });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <Clock\n          clockName={this.state.clockName}\n          random={this.random}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}